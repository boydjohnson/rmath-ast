use yajlish::ndjson_handler::Selector;

pub enum Ast {
    Value(Vec<Selector>),

    Add(Box<Ast>, Box<Ast>),
    Sub(Box<Ast>, Box<Ast>),
    Div(Box<Ast>, Box<Ast>),
    Mul(Box<Ast>, Box<Ast>),
    Pow(Box<Ast>, Box<Ast>),

    Abs(Box<Ast>),
    All(Box<Ast>),
    Any(Box<Ast>),
    Sqrt(Box<Ast>),
    Ceiling(Box<Ast>),
    Floor(Box<Ast>),
    Trunc(Box<Ast>),
    Round(Box<Ast>, u32),
    Signif(Box<Ast>, u32),
    Cos(Box<Ast>),
    Sin(Box<Ast>),
    Tan(Box<Ast>),
    ACos(Box<Ast>),
    ASin(Box<Ast>),
    ATan(Box<Ast>),
    Cosh(Box<Ast>),
    Sinh(Box<Ast>),
    Tanh(Box<Ast>),
    ACosh(Box<Ast>),
    ASinh(Box<Ast>),
    ATanh(Box<Ast>),
    Log(Box<Ast>),
    Log10(Box<Ast>),
    Exp(Box<Ast>),

    Substr(Box<Ast>, u32, u32),
    ToUpper(Box<Ast>),
    ToLower(Box<Ast>),
    ToString(Box<Ast>),

    IsDouble(Box<Ast>),
    IsNull(Box<Ast>),
    IsFloatNan(Box<Ast>),

    ToDouble(Box<Ast>),
    ToInt(Box<Ast>),

    RBern { seed: u64, prob: f64 },
    RBeta { seed: u64, shape1: u64, shape2: u64 },
    RBinom { seed: u64, size: u64, prob: f64 },
    RCauchey { seed: u64, scale: u64 },
    RChiSq { seed: u64, df: u64 },
    RF { seed: u64, df1: u64, df2: u64 },
    RGamma { seed: u64, shape: u64 },
    RGeom { seed: u64, prob: f64 },
    RHyper { seed: u64, m: u64, n: u64, k: u64 },
    RLNorm { seed: u64 },
    RLogis { seed: u64 },
    RNBinom { seed: u64, size: u64, prob: f64 },
    RNorm { seed: u64 },
    RPois { seed: u64, lambda: u64 },
}
